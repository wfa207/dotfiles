// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+w",
        "command": "-workbench.action.switchWindow"
    },
    {
        "key": "ctrl+a",
        "command": "-cursorLineStart",
        "when": "textInputFocus"
    },
    {
        "key": "shift+enter",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+cmd+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+g",
        "command": "workbench.view.scm"
    },
    {
        "key": "shift+cmd+g",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+g",
        "command": "-workbench.action.terminal.findPrevious",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "shift+cmd+g",
        "command": "-workbench.action.terminal.findPreviousTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "=",
        "command": "git.stageSelectedRanges",
        "when": "isInDiffEditor && editorHasSelection"
    },
    {
        "key": "-",
        "command": "git.unstageSelectedRanges",
        "when": "isInDiffEditor && editorHasSelection"
    },
    {
        "key": "cmd+;",
        "command": "workbench.action.debug.stepInto",
        "when": "inDebugMode"
    },
    {
        "key": "cmd+shift+;",
        "command": "workbench.action.debug.stepOut",
        "when": "inDebugMode"
    },
    {
        "key": "cmd+'",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "cmd+\\",
        "command": "workbench.action.debug.pause",
        "when": "debugState == 'running'"
    },
    {
        "key": "cmd+\\",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode",
    },
    {
        "key": "shift+cmd+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+\\",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "shift+cmd+\\",
        "command": "workbench.action.splitEditor",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+b",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+r",
        "command": "editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "shift+cmd+enter",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "shift+cmd+enter",
        "command": "search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "shift+cmd+1",
        "command": "-search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "shift+cmd+1",
        "command": "-search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "cmd+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+]",
        "command": "goToNextReference",
        "when": "referenceSearchVisible"
    },
    {
        "key": "f4",
        "command": "-goToNextReference",
        "when": "referenceSearchVisible"
    },
    {
        "key": "cmd+[",
        "command": "goToPreviousReference",
        "when": "referenceSearchVisible"
    },
    {
        "key": "shift+f4",
        "command": "-goToPreviousReference",
        "when": "referenceSearchVisible"
    },
    {
        "key": "enter",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "enter",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible && !replaceActive"
    },
    {
        "key": "enter",
        "command": "search.action.focusSearchList",
        "when": "inputBoxFocus && searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "shift+cmd+f",
        "command": "search.action.focusSearchList",
        "when": "hasSearchResult && editorTextFocus && searchViewletVisible"
    },
    {
        "key": "tab",
        "command": "search.action.focusSearchList",
        "when": "inputBoxFocus && hasSearchResult && searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "tab",
        "command": "search.focus.nextInputBox",
        "when": "searchInputBoxFocus && replaceActive && searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "shift+cmd+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "shift+cmd+t",
        "command": "workbench.view.extension.test"
    },
    {
        "key": "shift+x",
        "command": "workbench.files.action.collapseExplorerFolders",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
        "key": "m a",
        "command": "explorer.newFile",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus",
    },
    {
        "key": "ctrl+c",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+c",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+c",
        "command": "closeReplaceInFilesWidget",
        "when": "replaceInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+c",
        "command": "editor.cancelOperation",
        "when": "cancellableOperation"
    },
    {
        "key": "ctrl+c",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "cmd+r",
        "command": "python.runtests",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.test'"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.debug.start",
        "when": "!inDebugMode && sideBarFocus && activeViewlet == 'workbench.view.debug'"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode"
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "cmd+k cmd+n",
        "command": "workbench.action.duplicateWorkspaceInNewWindow"
    },
    {
        "key": "shift+cmd+;",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "shift+cmd+j",
        "when": "panelFocus && !inSearchEditor && !searchViewletFocus",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "cmd+k w",
        "when": "terminalFocus",
        "command": "workbench.action.terminal.kill"
    },
]