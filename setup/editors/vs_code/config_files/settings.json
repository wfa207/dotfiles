{
    // Text Editing ######################################################################################################
    "diffEditor.renderSideBySide": false,
    "editor.find.seedSearchStringFromSelection": "never",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.fontLigatures": true,
    "editor.lineNumbers": "relative",
    "editor.largeFileOptimizations": false,
    "editor.minimap.enabled": false,
    "editor.renderControlCharacters": false,
    "editor.wordWrap": "bounded",
    "editor.wordWrapColumn": 120,
    "emmet.includeLanguages": {
        "javascript": "javascriptreact"
    },
    "emmet.triggerExpansionOnTab": true,
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    "synthwave84.brightness": 0.45,
    "update.mode": "none",
    "workbench.editor.focusRecentEditorAfterClose": false,
    "workbench.editor.tabSizing": "shrink",
    "workbench.editor.enablePreviewFromCodeNavigation": true,
    "workbench.editor.tabCloseButton": "left",
    "workbench.colorCustomizations": {
        "[Nord]": {
            "editorLineNumber.foreground": "#B48EAD"
        }
    },
    // Vim ===============================================================================================================
    "vim.handleKeys": {
        "<C-o>": false,
        "<C-i>": false
    },
    "vim.textwidth": 120,
    "vim.leader": ",",
    "vim.camelCaseMotion.enable": true,
    "vim.smartRelativeLine": true,
    "vim.surround": true,
    "vim.useSystemClipboard": true,
    // "vim.debug.loggingLevelForConsole": "debug",
    "vim.visualstar": true,
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<C-l>"
            ], // Navigate Right
            "after": [
                "<C-w>",
                "l"
            ]
        },
        {
            "before": [
                "<C-h>"
            ], // Navigate Left
            "after": [
                "<C-w>",
                "h"
            ]
        },
        {
            "before": [
                "<C-k>"
            ], // Navigate Up
            "after": [
                "<C-w>",
                "k"
            ]
        },
        {
            "before": [
                "<C-j>"
            ], // Navigate Down
            "after": [
                "<C-w>",
                "j"
            ]
        },
        {
            "before": [
                "<C-w>",
                "<C-w>"
            ], // Navigate Down
            "commands": [
                ":q"
            ]
        },
        {
            "before": [
                "<C-a>"
            ], // Toggle between relative & absolute line numbers
            "commands": [
                "settings.cycle.lineNumber"
            ]
        },
        {
            "before": [
                "g",
                "r"
            ],
            "commands": [
                {
                    "command": "editor.action.referenceSearch.trigger",
                    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
                }
            ]
        },
        {
            "before": [
                "g",
                "R"
            ],
            "commands": [
                {
                    "command": "references-view.findReferences",
                    "when": "!references-view.tree.visible && editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
                },
                {
                    "command": "references-view.tree.focus",
                    "when": "references-view.tree.visible && editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
                }
            ]
        },
        {
            "before": [
                "g",
                "d"
            ],
            "commands": [
                {
                    "command": "editor.action.peekDefinition",
                    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
                }
            ]
        },
        {
            "before": [
                "<C-["
            ], // Bind to escape key
            "after": [
                "<Esc>"
            ]
        },
        {
            "before": [
                "/"
            ],
            "commands": [
                {
                    "command": "actions.find",
                    "when": "editorFocus"
                }
            ]
        },
        {
            "before": [
                "n"
            ],
            "commands": [
                {
                    "command": "editor.action.nextMatchFindAction",
                    "when": "editorFocus"
                }
            ]
        },
        {
            "before": [
                "N"
            ],
            "commands": [
                {
                    "command": "editor.action.previousMatchFindAction",
                    "when": "editorFocus"
                }
            ]
        },
        {
            "before": [
                "u"
            ],
            "after": [],
            "commands": [
                {
                    "command": "undo",
                    "when": "textInputFocus && !editorReadonly"
                }
            ]
        },
        {
            "before": [
                "<C-r>"
            ],
            "after": [],
            "commands": [
                {
                    "command": "redo",
                    "when": "textInputFocus && !editorReadonly"
                }
            ]
        },
        {
            "before": [
                "<C-c>"
            ],
            "commands": [
                {
                    "command": ":nohl",
                    "when": "textInputFocus"
                },
                {
                    "command": "editor.cancelOperation",
                    "when": "cancellableOperation"
                },
                {
                    "command": "closeFindWidget",
                    "when": "editorFocus && findWidgetVisible"
                },
                {
                    "command": "extension.vim_escape",
                    "when": "editorFocus && findWidgetVisible"
                }
            ]
        },
        {
            "before": [
                "="
            ],
            "commands": [
                {
                    "command": "editor.action.formatDocument",
                    "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
                }
            ]
        },
        {
            "before": [
                "<space>"
            ],
            "after": [
                "@",
                "q"
            ]
        },
        {
            "before": [
                "<leader>",
                "e",
                "n"
            ],
            "commands": [
                {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "code -r ~/Desktop/scratch.md\u000D"
                    }
                }
            ]
        },
        {
            "before": [
                "<leader>",
                "e",
                "p"
            ],
            "commands": [
                {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "code -r ~/Desktop/scratch.py\u000d"
                    }
                }
            ]
        },
        {
            "before": [
                "<leader>",
                "e",
                "s"
            ],
            "commands": [
                {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "code -r ~/Desktop/scratch.sql\u000d"
                    }
                }
            ]
        }
    ],
    "vim.insertModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<C-["
            ], // Bind to escape key
            "after": [
                "<Esc>"
            ]
        },
        {
            "before": [
                "<C-a>"
            ], // Toggle between relative & absolute line numbers
            "commands": [
                "cursorLineStart"
            ],
            "when": "textInputFocus"
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<C-c>"
            ],
            "commands": [
                {
                    "command": ":nohl",
                    "when": "textInputFocus"
                },
                {
                    "command": "editor.cancelOperation",
                    "when": "cancellableOperation"
                },
                {
                    "command": "closeFindWidget",
                    "when": "editorFocus && findWidgetVisible"
                },
                {
                    "command": "extension.vim_escape",
                    "when": "editorFocus && findWidgetVisible"
                }
            ]
        },
        {
            "before": [
                "n"
            ],
            "commands": [
                {
                    "command": "editor.action.nextMatchFindAction",
                    "when": "editorFocus"
                }
            ]
        },
        {
            "before": [
                "N"
            ],
            "commands": [
                {
                    "command": "editor.action.previousMatchFindAction",
                    "when": "editorFocus"
                }
            ]
        },
        {
            "before": [
                "/"
            ],
            "commands": [
                {
                    "command": "actions.find",
                    "when": "editorFocus"
                }
            ]
        }
    ],
    "settings.cycle": [
        {
            "id": "lineNumber",
            "overrideWorkspaceSettings": false,
            "values": [
                {
                    "editor.lineNumbers": "on"
                },
                {
                    "editor.lineNumbers": "relative"
                }
            ]
        }
    ],
    "git.autofetch": true,
    "git.enableSmartCommit": true,
    "git.suggestSmartCommit": false,
    "githubPullRequests.remotes": [
        "origin"
    ],
    "gitlens.blame.ignoreWhitespace": true,
    "workbench.iconTheme": "material-icon-theme",
    // Search ############################################################################################################
    "search.collapseResults": "alwaysExpand",
    "search.quickOpen.includeHistory": false,
    "search.searchOnType": false,
    "search.showLineNumbers": true,
    "workbench.list.automaticKeyboardNavigation": false,
    // Terminal ##########################################################################################################
    "terminal.integrated.fontFamily": "Inconsolata for Powerline",
    "terminal.integrated.profiles.osx": {
        "bash": {
            "path": "/bin/bash"
        }
    },
    "terminal.integrated.defaultProfile.osx": "bash",
    // Languages #########################################################################################################
    // Python ============================================================================================================
    "autoDocstring.docstringFormat": "sphinx",
    "pyright.disableOrganizeImports": true,
    "[python]": {
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        }
    },
    "python.diagnostics.sourceMapsEnabled": false,
    "python.formatting.provider": "none",
    "python.languageServer": "Jedi",
    "python.linting.mypyArgs": [
        "--disallow-untyped-defs",
        "--disallow-incomplete-defs",
        "--disallow-untyped-decorators"
    ],
    "python.poetryPath": "/Users/wes.auyeung/.poetry/bin/poetry",
    "python.venvFolders": [
        "Library/Caches/pypoetry/virtualenvs"
    ],
    "python.venvPath": "~/Library/Caches/pypoetry/virtualenvs",
    "python.linting.pylintEnabled": false,
    "python.terminal.activateEnvInCurrentTerminal": true,
    "python.testing.pytestArgs": [
        "-v"
    ],
    "jupyter.debugJustMyCode": false,
    "python.analysis.typeCheckingMode": "off",
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "python.sortImports.args": [
        "--profile",
        "black",
        "--src-path",
        "${workspaceFolder}"
    ],
    "restructuredtext.linter.executablePath": "doc8",
    // CSS ===============================================================================================================
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.tabSize": 2
    },
    // Javascript ========================================================================================================
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.detectIndentation": false,
        "editor.tabSize": 2
    },
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.detectIndentation": false,
        "editor.tabSize": 4
    },
    "prettier.singleQuote": true,
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.tabSize": 2
    },
    "typescript.referencesCodeLens.enabled": true,
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    // Extensions ########################################################################################################
    "extensions.ignoreRecommendations": true,
    "todo-tree.general.tags": [
        "BUG",
        "HACK",
        "FIXME",
        "TODO",
        "XXX",
        "[ ]",
        "[x]"
    ],
    "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
    "jupyter.logging.level": "error",
    "markdown-preview-enhanced.codeBlockTheme": "one-dark.css",
    "markdown-preview-enhanced.mermaidTheme": "dark",
    "markdown-preview-enhanced.previewTheme": "github-dark.css",
    "editor.unicodeHighlight.invisibleCharacters": false,
    "editor.unicodeHighlight.ambiguousCharacters": false,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "editor.showFoldingControls": "always",
    "gitlens.advanced.repositorySearchDepth": 1,
    "extensions.autoUpdate": false,
    "githubPullRequests.pullBranch": "never",
    "todohighlight.isEnable": true,
    "workbench.colorTheme": "Nord",
    "[less]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "javascript.updateImportsOnFileMove.enabled": "always",
    "go.toolsManagement.autoUpdate": true,
    "workbench.activityBar.location": "hidden",
    "workbench.editor.tabActionLocation": "left",
    "datadog.telemetry.setup.enableTelemetry": "enabled",
    "explorer.confirmDragAndDrop": false,
    "javascript.preferGoToSourceDefinition": true,
    "javascript.preferences.importModuleSpecifier": "non-relative",
    "typescript.preferences.importModuleSpecifier": "non-relative",
    "javascript.experimental.updateImportsOnPaste": true,
    "typescript.experimental.updateImportsOnPaste": true,
    "window.restoreWindows": "none",
    "cSpell.enableFiletypes": [
        "!javascript",
        "!typescript"
    ],
    "reactComponentGenerator.createStoriesFile": false,
    "reactComponentGenerator.useIndexFile": true,
    "security.workspace.trust.untrustedFiles": "open",
}