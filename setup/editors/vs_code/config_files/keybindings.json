// Place your key bindings in this file to override the defaultsauto[]
// "when" clause contexts: https://code.visualstudio.com/api/references/when-clause-contexts#available-contexts
// Execute "Developer: Inspect Context Keys" in Command Palette (cmd+shift+p) to debug "when" clause contexts
// "when" clause conditional operators: https://code.visualstudio.com/api/references/when-clause-contexts#conditional-operators
// "when" clause context keys: https://code.visualstudio.com/api/references/when-clause-contexts#inspect-context-keys-utility
// Execute "Developer: Toggle Keyboard Shortcuts Troubleshooting" in Command Palette (cmd+shift+p) to debug keybindings
[
  // Editor ############################################################################################################
  // Formatting ========================================================================================================
  {
    "key": "cmd+k cmd+n",
    "command": "workbench.action.duplicateWorkspaceInNewWindow"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward"
  },
  {
    "key": "ctrl+i",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "ctrl+cmd+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "enter",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !replaceActive"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus"
  },
  // Vim Compatibility =================================================================================================
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  },
  {
    "key": "ctrl+a",
    "command": "-cursorLineStart",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+c",
    "command": "editor.cancelOperation",
    "when": "cancellableOperation"
  },
  {
    "key": "ctrl+c",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && findWidgetVisible"
  },
  {
    "key": "ctrl+c",
    "command": "closeReferenceSearch",
    "when": "referenceSearchVisible && !config.editor.stablePeek"
  },
  {
    "key": "cmd+enter",
    "command": "openReferenceToSide",
    "when": "listFocus && referenceSearchVisible && !inputFocus"
  },
  // Refactoring =======================================================================================================
  // Docs: https://code.visualstudio.com/docs/editor/refactoring
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+shift+r r",
    "command": "editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+shift+r f",
    "command": "editor.action.codeAction",
    "args": {
      "kind": "refactor.extract.function",
      "apply": "ifSingle"
    }
  },
  {
    "key": "cmd+shift+r v",
    "command": "editor.action.codeAction",
    "args": {
      "kind": "refactor.extract.constant",
      "apply": "ifSingle"
    }
  },
  {
    "key": "cmd+shift+r t",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  // Python ------------------------------------------------------------------------------------------------------------
  {
    "key": "cmd+shift+r f",
    "command": "python.refactorExtractMethod",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly && editorLangId == 'python'"
  },
  {
    "key": "cmd+shift+r v",
    "command": "python.refactorExtractVariable",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly && editorLangId == 'python'"
  },
  // General ===========================================================================================================
  {
    "key": "cmd+shift+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "alt+cmd+enter",
    "command": "-editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "cmd+]",
    "command": "goToNextReference",
    "when": "referenceSearchVisible"
  },
  {
    "key": "f4",
    "command": "-goToNextReference",
    "when": "referenceSearchVisible"
  },
  {
    "key": "cmd+[",
    "command": "goToPreviousReference",
    "when": "referenceSearchVisible"
  },
  {
    "key": "shift+f4",
    "command": "-goToPreviousReference",
    "when": "referenceSearchVisible"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.output.action.clearOutput",
    "when": "view.workbench.panel.output.visible"
  },
  // Search ############################################################################################################
  // Navigation ========================================================================================================
  {
    "key": "enter",
    "command": "search.action.focusSearchList",
    "when": "inputBoxFocus && searchViewletFocus && searchViewletVisible"
  },
  {
    "key": "cmd+shift+f",
    "command": "search.action.focusSearchList",
    "when": "hasSearchResult && editorTextFocus && searchViewletVisible"
  },
  {
    "key": "cmd+shift+h",
    "command": "search.action.focusSearchList",
    "when": "hasSearchResult && editorTextFocus && searchViewletVisible"
  },
  {
    "key": "tab",
    "command": "search.action.focusSearchList",
    "when": "inputBoxFocus && hasSearchResult && searchViewletFocus && searchViewletVisible"
  },
  {
    "key": "tab",
    "command": "search.focus.nextInputBox",
    "when": "searchInputBoxFocus && replaceActive && searchViewletFocus && searchViewletVisible"
  },
  {
    "key": "cmd+shift+,",
    "command": "-editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+shift+,",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "cmd+k shift+cmd+s",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },
  // General ==========================================================================================================
  {
    "key": "cmd+shift+enter",
    "command": "search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "key": "alt+cmd+enter",
    "command": "-search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "key": "cmd+shift+1",
    "command": "-search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "cmd+shift+1",
    "command": "-search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "cmd+shift+1",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && replaceActive"
  },
  {
    "key": "ctrl+c",
    "command": "closeReplaceInFilesWidget",
    "when": "replaceInputBoxFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  // Explorer ##########################################################################################################
  {
    "key": "cmd+shift+e",
    "command": "workbench.explorer.fileView.focus",
    "when": "explorerViewletVisible && !filesExplorerFocus"
  },
  {
    "key": "o",
    "command": "list.select",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "list.select",
    "when": "listFocus && listSupportsKeyboardNavigation && inputFocus"
  },
  {
    "key": "cmd+o",
    "command": "explorer.openToSide",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "shift+enter",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+x",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "m a",
    "command": "explorer.newFile",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  // Source Control ####################################################################################################
  // View ==============================================================================================================
  {
    "key": "cmd+shift+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "cmd+shift+g",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "cmd+shift+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "cmd+shift+g",
    "command": "-workbench.action.terminal.findPreviousTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "o",
    "command": "list.select",
    "when": "workbench.scm.active && !inputFocus"
  },
  {
    "key": "cmd+k o",
    "command": "git.openFile",
    "when": "isInDiffEditor"
  },
  {
    "key": "=",
    "command": "git.stageSelectedRanges",
    "when": "isInDiffEditor && editorHasSelection"
  },
  {
    "key": "shift+=",
    "command": "git.stage",
    "when": "isInDiffEditor"
  },
  {
    "key": "-",
    "command": "git.unstageSelectedRanges",
    "when": "editorReadonly && editorHasSelection"
  },
  {
    "key": "cmd+k cmd+r",
    "command": "-git.revertSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "-",
    "command": "git.revertSelectedRanges",
    "when": "isInDiffEditor && editorHasSelection"
  },
  {
    "key": "shift+-",
    "command": "git.clean",
    "when": "isInDiffEditor && !editorHasSelection && !findInputFocussed"
  },
  {
    "key": "shift+-",
    "command": "git.unstage",
    "when": "workbench.scm.active && editorReadonly && !findInputFocussed"
  },
  // General ===========================================================================================================
  {
    "key": "cmd+]",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  // Testing & Debugging ###############################################################################################
  {
    "key": "cmd+shift+j",
    "when": "panelFocus && !inSearchEditor && !searchViewletFocus",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+b",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "f9",
    "command": "-editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+shift+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "cmd+shift+t",
    "command": "workbench.view.extension.test"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.debug.start",
    "when": "!inDebugMode && sideBarFocus && activeViewlet == 'workbench.view.debug'"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.debug.pause",
    "when": "debugState == 'running'"
  },
  {
    "key": "cmd+\\",
    "command": "workbench.action.debug.continue",
    "when": "inDebugMode"
  },
  {
    "key": "cmd+;",
    "command": "workbench.action.debug.stepInto",
    "when": "inDebugMode"
  },
  {
    "key": "cmd+shift+;",
    "command": "-breadcrumbs.focus",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "cmd+shift+;",
    "command": "workbench.action.debug.stepOut",
    "when": "inDebugMode"
  },
  {
    "key": "cmd+'",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "cmd+r",
    "command": "python.runtests",
    "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.test'"
  },
  // Terminal ##########################################################################################################
  {
    "key": "cmd+shift+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+shift+\\",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+shift+[",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+shift+]",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+k w",
    "when": "terminalFocus",
    "command": "workbench.action.terminal.kill"
  },
  // Developer Tools ###################################################################################################
  {
    "key": "alt+cmd+i",
    "command": "-workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  {
    "key": "alt+cmd+i",
    "command": "workbench.action.toggleDevTools"
  },
  {
    "key": "shift+cmd+l",
    "command": "pr:github.focus"
  }
]
